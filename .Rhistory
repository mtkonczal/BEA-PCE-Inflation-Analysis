# ── Core Non-Housing Services = services ex energy minus housing ────────────────
make_core_non_housing_services <- function(pce) {
parts <- compute_contribs(
pce,
categories = c("PCE services excluding energy", "Housing")
) %>%
mutate(key = sub("^\\d+\\s*[-–]\\s*", "", LineDescription))  # strip any "5 - " prefix
row_services <- parts %>% filter(str_detect(key, "(?i)^PCE services excluding energy$"))
row_housing  <- parts %>% filter(str_detect(key, "(?i)^Housing$"))
if (nrow(row_services) != 1 || nrow(row_housing) != 1) return(tibble())
measure_cols <- c("m1_ann","m3_ann","since_d","yoy_2024","a_1819")
diffs <- tibble(
LineDescription = "4 - Core Non-Housing Services"
) |>
bind_cols(as_tibble(purrr::map_dfc(measure_cols, ~ row_services[[.x]] - row_housing[[.x]])) |>
set_names(measure_cols))
diffs
}
# ── Assemble final table (adds Core NHS, drops baseline services row) ───────────
assemble_table <- function(pce) {
base <- compute_contribs(pce, categories = CHECK_ITEMS)
core_nhs <- make_core_non_housing_services(pce)
# Remove the baseline services-ex-energy row (now represented by Core NHS)
cleaned <- base %>%
filter(!str_detect(LineDescription, "(?i)services excluding energy"))
final <- bind_rows(cleaned, core_nhs) %>%
arrange(LineDescription) %>%
mutate(LineDescription = sub("^\\d+\\s*[-–]\\s*", "", LineDescription)) %>%
rename(
`Past 1 Month`  = m1_ann,
`Past 3 Months` = m3_ann,
`2025 (So far)` = since_d,   # ANNUALIZED since Dec 2024
`2024`          = yoy_2024,  # Dec/Dec raw
`2018-2019`     = a_1819     # ANNUALIZED over 24 months
)
final
}
# ── Render GT table and save ────────────────────────────────────────────────────
render_gt <- function(tbl, pce, file = "graphics/inflation_chart.png") {
chart_date <- format(max(pce$date, na.rm = TRUE), "%B %Y")
tbl %>%
gt(rowname_col = "LineDescription") %>%
tab_header(
title    = md(paste0("**Breakdown of Weighted Contribution to ", chart_date, " PCE Inflation**")),
subtitle = "All rates are annualized."
) %>%
cols_align(align = "center", columns = everything()) %>%
fmt_percent(
columns = c(
"Past 1 Month",
"Past 3 Months",
"2025 (So far)",
"2024",
"2018-2019"
),
decimals = 2
) %>%
tab_source_note("Totals may differ slightly due to rounding. BEA, Author’s analysis. Mike Konczal.") %>%
opt_stylize(style = 6, color = "blue") %>%
gtsave(filename = file)
}
# ── Driver (one call) ───────────────────────────────────────────────────────────
build_pce_table <- function(pce,
categories = CHECK_ITEMS,
out_file = "graphics/inflation_chart.png") {
tbl <- assemble_table(pce)
render_gt(tbl, pce, file = out_file)
invisible(tbl)
}
# ── EXAMPLE (uncomment to run) ─────────────────────────────────────────────────
tbl <- build_pce_table(pce)
# View(tbl)
# Get preloaded categories and levels for each from data file.
lowest <- read_csv("data/pce_items_lowest.csv")
library(quantmod)
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
# Function to remove outliers for graphics
remove_outliers <- function(x, multiplier = 1.5) {
Q1 <- quantile(x, 0.25, na.rm = TRUE)
Q3 <- quantile(x, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - multiplier * IQR
upper_bound <- Q3 + multiplier * IQR
x[(x < lower_bound) | (x > upper_bound)] <- NA
return(x)
}
# Function for formatting percent signs in charts.
f_pct <- function(n) {
return(str_c(sprintf('%.f', 100*n), "%"))
}
# Get preloaded categories and levels for each from data file.
lowest <- read_csv("data/pce_items_lowest.csv")
months_change <- 12
compare_date <- "2022-11-01"
recent <-pce %>% group_by(date) %>%
# This removes duplicates values put in the BEA underlying table.
distinct(LineNumber, .keep_all = TRUE) %>%
ungroup() %>%
group_by(LineDescription) %>%
# Take the six-month change in inflation and quantities for all values and all dates.
mutate(QuantityFinal = Quantity/lag(Quantity,months_change)-1,
PriceFinal = DataValue/lag(DataValue,months_change)-1,
) %>%
# Isolate the latest date and the comparison date.
filter(date == max(date) | date == compare_date) %>%
# Take the difference in rates, so using a deceleration, and keep the latest weight.
summarize(QuantityFinal = QuantityFinal[date == max(date)] - QuantityFinal[date == compare_date],
PriceFinal = PriceFinal[date == max(date)] - PriceFinal[date == compare_date],
weight = PCEweight[date == max(date)]) %>%
ungroup()
pce_supply %>%
mutate(QuantityFinal = remove_outliers(QuantityFinal, 4)) %>%
ggplot(aes(QuantityFinal,PriceFinal,size=weight, color=category)) + geom_point(aes(fill="skyblue"), alpha=0.5, shape = 21, color = "black", stroke = 1.5, show.legend=FALSE) +
theme_classic() + geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
theme(text = element_text(size = 22)) +
labs(y = "Price (Inflation)",
x = "Quantity",
subtitle="Change in 12-month change, inflation and quantity, 123 PCE categories.\n12-month change Nov 2023 compared to baseline 12-month change November 2022.",
title="80 Percent of Inflation Deceleration is Happening Where Supply is Increasing",
caption = "NIPA tables 2.4.3U, 2.4.4U, 2.4.5U. Mike Konczal, Roosevelt Institute.") +
facet_wrap(~category) +
scale_y_continuous(labels = scales::percent) +
scale_x_continuous(labels = scales::percent) +
theme(plot.title.position = "plot") +  theme(strip.background = element_blank())
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
nipa <- getNIPAFiles(type = "M")
pce <- getPCEInflation(frequency = "M", NIPA_data = nipa) %>%
mutate(LineDescription = SeriesLabel, DataValue = Value)
max(pce$date)
# This creates a graphic with three images
title_three_dashboard <- "I Love it When a Plan Comes Together: Goods Zero, Non-Housing Services Slowing"
three_twelve_graphic <- "Inflation Over the Past Three Months Have Finally Dropped"
title_overview <- "PCE Inflation Fell Last Month"
date_breaks <- sort(unique(pce$date), decreasing = TRUE)
date_breaks <- date_breaks[seq(1, length(date_breaks), 6)]
tk <- date_breaks_n(pce$date, 6)
tk
date_breaks == df
date_breaks - df
as.numeric(date_breaks) - as.numeric(df)
as.numeric(date_breaks) - as.numeric(df)
as.numeric(date_breaks)
df
tk
as.numeric(date_breaks) - as.numeric(tk)
pce %>%
filter(date >= "2022-01-01", LineDescription == "PCE excluding food and energy") %>%
mutate(DataValue_P1a = (1 + DataValue_P1)^12 - 1) %>%
filter(DataValue_P1a > -0.04) %>%
select(date, LineDescription, DataValue_P1a) %>%
mutate(num_label = round(100 * DataValue_P1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
mutate(num_label = ifelse(date >= "2025-01-01", num_label, NA)) %>%
ggplot(aes(x = date, y = DataValue_P1a, label = num_label)) +
geom_bar(stat = "identity", size = 0, fill=esp_navy) +
labs(
y = NULL,
x = NULL,
title = title_overview,
subtitle = "Monthly percent increase in PCE core goods and services, annualized.",
caption = "BEA, NIPA Tables 2.4.4 and 2.4.5, author's calculations. Author's calculation. Mike Konczal, Roosevelt Institute"
) +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major.y = element_line(size = 0.5)) +
theme(plot.title.position = "plot") +
scale_y_continuous(labels = percent) +
geom_text(aes(x = date, y = DataValue_P1a, label = num_label), nudge_y = 0.002, size = 3, color = esp_navy) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks) +
theme_esp()
##### BASELINE GRAPHIC
##### Graphic1: Core Inflation ####
pce %>%
filter(date >= "2022-01-01", LineDescription == "PCE excluding food and energy") %>%
mutate(DataValue_P1a = (1 + DataValue_P1)^12 - 1) %>%
filter(DataValue_P1a > -0.04) %>%
select(date, LineDescription, DataValue_P1a) %>%
mutate(num_label = round(100 * DataValue_P1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
mutate(num_label = ifelse(date >= "2025-01-01", num_label, NA)) %>%
ggplot(aes(x = date, y = DataValue_P1a, label = num_label)) +
geom_bar(stat = "identity", size = 0, fill=esp_navy) +
labs(
y = NULL,
x = NULL,
title = title_overview,
subtitle = "Monthly percent increase in PCE core goods and services, annualized.",
caption = "BEA, NIPA Tables 2.4.4 and 2.4.5, author's calculations. Author's calculation. Mike Konczal, Roosevelt Institute"
) +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major.y = element_line(size = 0.5)) +
theme(plot.title.position = "plot") +
scale_y_continuous(labels = percent) +
geom_text(aes(x = date, y = DataValue_P1a, label = num_label), nudge_y = 0.002, size = 3, color = esp_navy) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks_n(date, 6)) +
theme_esp()
date_breaks <- sort(unique(pce$date), decreasing = TRUE)
date_breaks <- date_breaks[seq(1, length(date_breaks), 6)]
##### BASELINE GRAPHIC
##### Graphic1: Core Inflation ####
pce %>%
filter(date >= "2022-01-01", LineDescription == "PCE excluding food and energy") %>%
mutate(DataValue_P1a = (1 + DataValue_P1)^12 - 1) %>%
filter(DataValue_P1a > -0.04) %>%
select(date, LineDescription, DataValue_P1a) %>%
mutate(num_label = round(100 * DataValue_P1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
mutate(num_label = ifelse(date >= "2025-01-01", num_label, NA)) %>%
ggplot(aes(x = date, y = DataValue_P1a, label = num_label)) +
geom_bar(stat = "identity", size = 0, fill=esp_navy) +
labs(
y = NULL,
x = NULL,
title = title_overview,
subtitle = "Monthly percent increase in PCE core goods and services, annualized.",
caption = "BEA, NIPA Tables 2.4.4 and 2.4.5, author's calculations. Author's calculation. Mike Konczal, Roosevelt Institute"
) +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major.y = element_line(size = 0.5)) +
theme(plot.title.position = "plot") +
scale_y_continuous(labels = percent) +
geom_text(aes(x = date, y = DataValue_P1a, label = num_label), nudge_y = 0.002, size = 3, color = esp_navy) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks) +
theme_esp()
date_breaks <- date_breaks_n(pce$date, 6)
##### BASELINE GRAPHIC
##### Graphic1: Core Inflation ####
pce %>%
filter(date >= "2022-01-01", LineDescription == "PCE excluding food and energy") %>%
mutate(DataValue_P1a = (1 + DataValue_P1)^12 - 1) %>%
filter(DataValue_P1a > -0.04) %>%
select(date, LineDescription, DataValue_P1a) %>%
mutate(num_label = round(100 * DataValue_P1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
mutate(num_label = ifelse(date >= "2025-01-01", num_label, NA)) %>%
ggplot(aes(x = date, y = DataValue_P1a, label = num_label)) +
geom_bar(stat = "identity", size = 0, fill=esp_navy) +
labs(
y = NULL,
x = NULL,
title = title_overview,
subtitle = "Monthly percent increase in PCE core goods and services, annualized.",
caption = "BEA, NIPA Tables 2.4.4 and 2.4.5, author's calculations. Author's calculation. Mike Konczal, Roosevelt Institute"
) +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major.y = element_line(size = 0.5)) +
theme(plot.title.position = "plot") +
scale_y_continuous(labels = percent) +
geom_text(aes(x = date, y = DataValue_P1a, label = num_label), nudge_y = 0.002, size = 3, color = esp_navy) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks) +
theme_esp()
date_breaks <- date_breaks_n(pce$date, 12)
##### BASELINE GRAPHIC
##### Graphic1: Core Inflation ####
pce %>%
filter(date >= "2022-01-01", LineDescription == "PCE excluding food and energy") %>%
mutate(DataValue_P1a = (1 + DataValue_P1)^12 - 1) %>%
filter(DataValue_P1a > -0.04) %>%
select(date, LineDescription, DataValue_P1a) %>%
mutate(num_label = round(100 * DataValue_P1a, 1)) %>%
mutate(num_label = ifelse(abs(num_label) < 0.16, NA, num_label)) %>%
mutate(num_label = ifelse(date >= "2025-01-01", num_label, NA)) %>%
ggplot(aes(x = date, y = DataValue_P1a, label = num_label)) +
geom_bar(stat = "identity", size = 0, fill=esp_navy) +
labs(
y = NULL,
x = NULL,
title = title_overview,
subtitle = "Monthly percent increase in PCE core goods and services, annualized.",
caption = "BEA, NIPA Tables 2.4.4 and 2.4.5, author's calculations. Author's calculation. Mike Konczal, Roosevelt Institute"
) +
scale_fill_brewer(palette = "Paired") +
theme(panel.grid.major.y = element_line(size = 0.5)) +
theme(plot.title.position = "plot") +
scale_y_continuous(labels = percent) +
geom_text(aes(x = date, y = DataValue_P1a, label = num_label), nudge_y = 0.002, size = 3, color = esp_navy) +
scale_x_date(date_labels = "%b\n%Y", breaks = date_breaks) +
theme_esp()
date_breaks_n(pce$date, 6)
date_breaks_n(pce$date, 6) %>% pull()
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
nipa <- getNIPAFiles(type = "M")
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
nipa <- getNIPAFiles(type = "M")
write_rds(nipa, "nipa.rds")
pce <- getPCEInflation(frequency = "M", NIPA_data = nipa) %>%
mutate(LineDescription = SeriesLabel, DataValue = Value)
max(pce$date)
title_three_dashboard <- "I Love it When a Plan Comes Together: Goods Zero, Non-Housing Services Slowing"
three_twelve_graphic <- "Inflation Over the Past Three Months Have Finally Dropped"
title_overview <- "PCE Inflation Fell Last Month"
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01"))
library(tidyusmacro)
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
library(tidyusmacro)
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
library(bea.R)
library(tidyverse)
library(lubridate)
library(scales)
library(viridis)
library(janitor)
library(ggrepel)
library(quantmod)
library(tidyusmacro)
nipa <- getNIPAFiles(type = "M")
write_rds(nipa, "nipa.rds")
pce <- getPCEInflation(frequency = "M", NIPA_data = nipa) %>%
mutate(LineDescription = SeriesLabel, DataValue = Value)
max(pce$date)
title_three_dashboard <- "I Love it When a Plan Comes Together: Goods Zero, Non-Housing Services Slowing"
three_twelve_graphic <- "Inflation Over the Past Three Months Have Finally Dropped"
title_overview <- "PCE Inflation Fell Last Month"
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01"))
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01"))
detach("package:yourPkg", unload = TRUE)
detach("tidyusmacro", unload = TRUE)
detach("package:tidyusmacro", unload = TRUE)
library(yourPkg)
detach("package:tidyusmacro", unload = TRUE)
library(tidyusmacro)
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01"))
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01")) %>%
filter(date >= "2023-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
labs(x="", y="",
title="Consumers Are Not Spending More Money in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp()
date_breaks <- sort(unique(pce$date), decreasing = TRUE)
date_breaks <- date_breaks[seq(1, length(date_breaks), 6)]
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01")) %>%
filter(date >= "2023-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
labs(x="", y="",
title="Consumers Are Not Spending More Money in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%B\n%Y", breaks=date_breaks) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
max(nipa$date)
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01")) %>%
filter(date >= "2023-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
labs(x="", y="",
title="Consumers Are Not Spending More Money in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%B\n%Y", breaks=date_breaks_gg(6, max(nipa$date))) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel == "Personal consumption expenditures") %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01")) %>%
filter(date >= "2023-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
labs(x="", y="",
title="Consumers Are Not Spending More Money in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%B\n%Y", breaks=date_breaks_gg(6, max(nipa$date))) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
date_breaks <- sort(unique(pce$date), decreasing = TRUE)
date_breaks <- date_breaks[seq(1, length(date_breaks), 6)]
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel %in% pce_categories) %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(., date, Value, "2021-12-01", "2024-12-01", group = SeriesLabel)) %>%
filter(date >= "2021-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
facet_wrap(~SeriesLabel, scales="free") +
labs(x="", y="",
title="Consumers Are Not Spending More Money on Services in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%b\n%Y", breaks=date_breaks) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
pce_categories <- c("PCE services excluding energy and housing", "Housing", "Durable goods", "Nondurable goods")
#pce_categories <- c("Food services and accommodations", "Net foreign travel and expenditures abroad by U.S. residents")
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel %in% pce_categories) %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(., date, Value, "2021-12-01", "2024-12-01", group = SeriesLabel)) %>%
filter(date >= "2021-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
facet_wrap(~SeriesLabel, scales="free") +
labs(x="", y="",
title="Consumers Are Not Spending More Money on Services in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%b\n%Y", breaks=date_breaks) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel %in% pce_categories) %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01", group = SeriesLabel)) %>%
filter(date >= "2021-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
facet_wrap(~SeriesLabel, scales="free") +
labs(x="", y="",
title="Consumers Are Not Spending More Money on Services in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%b\n%Y", breaks=date_breaks) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
nipa %>% filter(TableId == "T20806") %>%
filter(SeriesLabel %in% pce_categories) %>%
mutate(Value = Value/1000) %>%
mutate(projection = logLinearProjection(date, Value, "2021-12-01", "2024-12-01", group = SeriesLabel)) %>%
filter(date >= "2022-06-01") %>%
ggplot(aes(date, Value)) +
geom_line(size = 1.2, color = esp_navy) +
geom_line(aes(date, projection), size = 1.2, color = esp_navy, linetype = "dotted") +
facet_wrap(~SeriesLabel, scales="free") +
labs(x="", y="",
title="Consumers Are Not Spending More Money on Services in 2025",
subtitle = "Real Personal Consumption Expenditures, Trillions of Chained (2017) dollars. Dotted Line Log-Linear Projection 2022-2024",
caption = "Table 2.8.6. Mike Konczal.") +
theme_esp() +
scale_x_date(date_labels = "%b\n%Y", breaks=date_breaks) +
scale_y_continuous(labels = dollar_format()) +
geom_vline(xintercept = as.Date("2025-01-01"), linetype = "dotted")
